package com.kingfish.show.mybatis.dao;

import com.kingfish.show.mybatis.model.Feature;
import com.kingfish.show.mybatis.model.FeatureExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface FeatureMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @SelectProvider(type=FeatureSqlProvider.class, method="countByExample")
    long countByExample(FeatureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @DeleteProvider(type=FeatureSqlProvider.class, method="deleteByExample")
    int deleteByExample(FeatureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @Delete({
        "delete from feature",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @Insert({
        "insert into feature (content)",
        "values (#{content,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(Feature record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @InsertProvider(type=FeatureSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(Feature record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @SelectProvider(type=FeatureSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR)
    })
    List<Feature> selectByExample(FeatureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, content",
        "from feature",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR)
    })
    Feature selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @UpdateProvider(type=FeatureSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Feature record, @Param("example") FeatureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @UpdateProvider(type=FeatureSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Feature record, @Param("example") FeatureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @UpdateProvider(type=FeatureSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Feature record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table feature
     *
     * @mbg.generated
     */
    @Update({
        "update feature",
        "set content = #{content,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Feature record);
}